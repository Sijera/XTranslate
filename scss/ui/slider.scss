@import "../vars", "../mixins";

// form control
.slider {
  $sliderHeight: .6em;
  $bgcDisabled: #c0c0c0;
  $pointColor: #008000;

  position: relative;
  width: auto;
  height: $sliderHeight;
  border-radius: $sliderHeight;
  border: 1px groove rgba(255, 255, 255, .3);
  display: block;

  .line {
    position: absolute;
    border-radius: $sliderHeight;
    width: 100%;
    height: 100%;
    left: 0;
    top: 0;
    @include prop-with-vendors(background, 'linear-gradient(top, #2CB500, #267C00)');
  }

  .value {
    $pointSize: $sliderHeight * 1.55;

    position: absolute;
    outline: none;
    width: $pointSize;
    height: $sliderHeight;

    &:focus {
      .title {
        display: block;
      }
      .point {
        @include formControlFocus;
        border-color: white;
      }
    }

    &.low {
      left: 0;
    }

    &.high {
      right: 0;
    }

    .point {
      @include with-vendors(transform, translateY(-50%));

      position: absolute;
      width: $pointSize;
      height: $pointSize;
      background: $pointColor;
      border-radius: 50%;
      top: 50%;
      z-index: 1;
      border: .2em solid #ccc;
      box-shadow: 0 1px .35em black;
      cursor: pointer;

      &:hover + .title {
        display: block;
      }
    }

    .title {
      @include with-vendors(transform, translateX(-50%));

      position: absolute;
      font-style: normal;
      display: none;
      text-shadow: -1px -1px 0 black;
      color: white;
      white-space: nowrap;
      background: $bgColorBase;
      padding: 0 $radius;
      left: 50%;
      bottom: $pointSize / 2;
      margin-bottom: .5em;
      border-radius: $radius;
      border: 1px solid $bgcDisabled;
      z-index: 2;
    }
  }

  &.disabled {
    .value .point {
      background: #666;
    }
    .line {
      background: $bgcDisabled;
    }
  }
}

// bug fixes for FireFox
@-moz-document url-prefix() {
  .slider .point {
    // incorrect "outset" border-style for rounded elements
    border-style: solid !important;
  }
}